<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfStyleApi">


    <Style x:Key="CheckBoxLedGrStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Name="GelBackground" StrokeThickness="0.5" Fill="#00CC99" >
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="#00CC99"/>
                            </Ellipse.Effect>
                        </Ellipse>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Left"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Fill" Value="Red" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="Red"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GelBackground" Property="Fill" Value="#00CC99" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="#00CC99"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxLedWrStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Name="GelBackground" StrokeThickness="0.5" Fill="LightCyan" >
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="LightCyan"/>
                            </Ellipse.Effect>
                        </Ellipse>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Left"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Fill" Value="Red" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="Red"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxLedRgStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Name="GelBackground" StrokeThickness="0.5" Fill="Red" >
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="Red"/>
                            </Ellipse.Effect>
                        </Ellipse>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Left"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Fill" Value="#00CC99" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="#00CC99"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxLedWgStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Name="GelBackground" StrokeThickness="0.5" Fill="LightCyan" >
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="LightCyan"/>
                            </Ellipse.Effect>
                        </Ellipse>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Left"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Fill" Value="White" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="White"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GelBackground" Property="Fill" Value="Green" ></Setter>
                            <Setter TargetName="GelBackground" Property="Effect"  >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="5" Color="Green"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxCellGrStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Label Content="{TemplateBinding Content}" FontSize="5" Foreground="White" BorderBrush="DeepSkyBlue" BorderThickness="1"  Name="GelBackground" Background="black"></Label>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Background" Value="#FF5050" ></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GelBackground" Property="Background" Value="black" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxSwitchLabelStyle" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="/MESToolIntegration;component/Fonts/#iconfont"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{TemplateBinding Content}" Foreground="DeepSkyBlue" Margin="0,0,1,0" BorderBrush="{x:Null}"/>
                        <Border Width="54" Name="CheckTrueBG" Height="22" BorderThickness="1" Background="{x:Null}"  CornerRadius="10" BorderBrush="DeepSkyBlue" >
                            <Grid>
                                <Border BorderThickness="1" Background="#ACACAC" x:Name="border" Width="20" Height="20" CornerRadius="9" 
                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"  >
                                    <Border.RenderTransform>
                                        <TranslateTransform  X="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="iconfont"  
                                       FontSize="{TemplateBinding FontSize}" Margin="7,2.798,0,2.798" 
                                       VerticalAlignment="Stretch" Foreground="DeepSkyBlue" HorizontalAlignment="Left" >
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform   X="17"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="CheckTrueBG"  Value="LawnGreen"/>
                            <Setter Property="Foreground" TargetName="txt"  Value="#FFFFFF"/>
                            <Setter Property="Background" TargetName="border"  Value="#FFFFFF"/>
                            <Setter Property="Text" TargetName="txt" Value="ON"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="32" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="17" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Text" TargetName="txt" Value="OFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="chkBase" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <DockPanel  Background="{TemplateBinding Background}" ToolTip="{TemplateBinding Content}"
                                LastChildFill="False" Width="{TemplateBinding Width}">
                        <Image  Margin="1" DockPanel.Dock="Left" x:Name="_img"   />
                        <TextBlock DockPanel.Dock="Left" Foreground="#ffffff" Margin="0,0,0,0"  FontSize="{TemplateBinding FontSize}" 
                                x:Name="ChxContent" VerticalAlignment="Center" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="_img" Property="Source" Value="/WpfStyleApi;component/Resources/Checked.png"/>
                            <Setter TargetName="ChxContent" Property="Foreground" Value="#23cefd"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_img" Property="Source" Value="/WpfStyleApi;component/Resources/UnChecked.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ChxContent" Property="Foreground" Value="#23cefd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxBoreStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border  x:Name="bor" Background="LightGreen" CornerRadius="5" >
                        <Border.Effect >
                            <DropShadowEffect x:Name="effect" ShadowDepth="0" BlurRadius="10" Color="LightGreen"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bor" Property="Background" Value="LightGreen" ></Setter>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="bor" Property="Background" Value="White" ></Setter>
                            <Setter TargetName="bor" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect  ShadowDepth="0" BlurRadius="10" Color="White"/>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxSwitchStyle" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="/MESToolIntegration;component/Fonts/#iconfont"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Width="54" Name="CheckTrueBG" Height="22" BorderThickness="1" Background="{x:Null}"  CornerRadius="10" BorderBrush="DeepSkyBlue" >
                        <Grid>
                            <Border BorderThickness="1" Background="#ACACAC" x:Name="border" Width="20" Height="20" CornerRadius="9" 
                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"  >
                                <Border.RenderTransform>
                                    <TranslateTransform  X="1"/>
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="iconfont"  
                                       FontSize="{TemplateBinding FontSize}" Margin="7,2.798,0,2.798" 
                                       VerticalAlignment="Stretch" Foreground="DeepSkyBlue" HorizontalAlignment="Left" >
                                <TextBlock.RenderTransform>
                                    <TranslateTransform   X="17"></TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="CheckTrueBG"  Value="LawnGreen"/>
                            <Setter Property="Foreground" TargetName="txt"  Value="#FFFFFF"/>
                            <Setter Property="Background" TargetName="border"  Value="#FFFFFF"/>
                            <Setter Property="Text" TargetName="txt" Value="ON"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="32" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="17" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Text" TargetName="txt" Value="OFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxCellGrStyle_f" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Label Content="{TemplateBinding Content}" FontSize="12" Foreground="{TemplateBinding Foreground}" VerticalContentAlignment="Center" Margin="0"
                           HorizontalContentAlignment="Center" BorderBrush="DeepSkyBlue" BorderThickness="1"  Name="GelBackground" Background="black"></Label>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="GelBackground" Property="Background" Value="#FF5050" ></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GelBackground" Property="Background" Value="black" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConnectStatusStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="LedImage" Grid.Column="0" Width="36" Height="36" VerticalAlignment="Center"></Image>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="10,0,0,0" HorizontalAlignment="Left"
                                        Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox36_False.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox36_True.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ChxCtrlVacuum" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="LedImage" Grid.Column="0" Width="26" Height="16" VerticalAlignment="Center"></Image>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left"
                                        Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/OFF.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/On.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChxStyleHeight18" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Height="18" CornerRadius="4" Width="18" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="M9.5333567,1.1086519 L4.4902917,8.2453706 4.321453,8.2453706 0,4.7064372 1.2201192,3.1914953 4.066618,5.5175491 7.9643685,1.3828288E-05 9.5333567,1.1086519 z" Margin="3.833,4.75,-1.125,-1.25" Opacity="0" Stretch="None" RenderTransformOrigin="0.661,0.732"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{TemplateBinding Background}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter  x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Fill"  TargetName="optionMark" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Fill"  TargetName="optionMark" Value="#1a7fd5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ChxStyleHeight40" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="LedImage" Grid.Column="0" Width="40" Height="40" VerticalAlignment="Center"></Image>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="10,0,0,0" HorizontalAlignment="Left"
                                        Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox40_False.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox40_True.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChxStyleHeight38" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="LedImage" Grid.Column="0" Width="40" Height="40" VerticalAlignment="Center"></Image>
                        <ContentPresenter Grid.Column="1" Name="GelButtonContent" VerticalAlignment="Center" Margin="10,0,0,0" HorizontalAlignment="Left"
                                        Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox38_False.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="LedImage" Property="Source" Value="/WpfStyleApi;component/Resources/CheckBox38_True.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChxSixRecStyleHeight28" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="RadioFrid">
                        <Path x:Name="Rect"  Stroke="#23cefb"  Data="M0.5,14 L10,0.5 L34,0.5 L43.5,14 L34,27.5 L10,27.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" />
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center" Foreground="White"  Background="{x:Null}"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="content" Property="Foreground" Value="#141f3b" />
                            <Setter TargetName="Rect" Property="Fill" Value="#4aeff8"/>
                            <Setter TargetName="content" Property="Text" Value="ON"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="content" Property="Foreground" Value="#ffffff" />
                            <Setter TargetName="content" Property="Text" Value="OFF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="Rect" Property="Fill" Value="#5ba0c5" />
                            <!--<Setter TargetName="rodioIcon" Property="FontSize" Value="44" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>