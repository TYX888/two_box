<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfStyleApi">

    <Style x:Key="DefBtn" TargetType="Button">
        <Setter Property="Foreground" Value="DeepSkyBlue"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="2"  BorderBrush="#33CCFF"  CornerRadius="5" Background="#082C38">
                        <Grid >
                            <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="border" Property="Background" Value="DarkGray" />
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="content" Property="Foreground" Value="White" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="border" Property="Background" Value="#33CCFF" />
                            <Setter TargetName="content" Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefDoubleBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="2"  BorderBrush="#33CCFF"  CornerRadius="5" Background="#082C38">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#33CCFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                            <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="border" Property="Background" Value="DarkGray" />
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="content" Property="Foreground" Value="White" />
                            <Setter TargetName="tag" Property="Foreground" Value="White" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="border" Property="Background" Value="#33CCFF" />
                            <Setter TargetName="content" Property="Foreground" Value="White" />
                            <Setter TargetName="tag" Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" x:Name="ExpanderGrid" Margin="0,-1,0,-1">
                            <Grid.Background>
                                <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Auto/AppBar/MaxMin.png"/>
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.RowSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>

                                <Path x:Name="arrow" Margin="0,0,0,0" Stroke="#ffffff" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false"  StrokeThickness="2" VerticalAlignment="Center" Width="9" Height="9"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,34.5,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            <!--<Setter Property="Background" TargetName="ExpanderGrid" Value="#1eb0fc"/>-->
                            <Setter Property="Background" TargetName="ExpanderGrid" >
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Auto/AppBar/MaxMinExpand.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="ExpanderGrid" Value="0.85"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">

                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">

                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="75"/>
                            </Grid.RowDefinitions>
                            <StackPanel  Orientation="Horizontal" >
                                <Path Fill="#23cefd" Data="M 30,0 A 6,6 45 1 1 30,1 Z" Margin="0,6.4,16,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="0"  Width="85"  RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                <Path x:Name="arrow" Margin="46,0,0,0" Grid.Column="0" Stroke="#23cefd" Data="M 0,1.5 L 6,6 L 12,1.5" HorizontalAlignment="Right" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,4.5 L 6,0 L 12,4.5"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                              
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                               
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                              
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" 
                                          DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" 
                                          FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"  
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          FontFamily="/WpfStyleApi;component/Resources/FontFamily/#思源黑体 CN Bold"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" 
                                          FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                          FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
                                          FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderLeftHeaderStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Left" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>

                            <Setter Property="Opacity" TargetName="ExpandSite" Value="0.85"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsExpanded"  Value="false">
                            <Setter Property="Background" TargetName="HeaderSite" Value="LightCyan"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver"  Value="false">
                            <Setter Property="IsExpanded"  Value="false"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter Property="IsExpanded"  Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnSaveMouseOver" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Save_Click.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" FontSize="12" Foreground="White"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Save.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SixSideRectDoubleBtnHorizontal" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,14 L10,0.5 L182,0.5 L191.5,14 L182,27.5 L10,27.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                            <TextBlock Grid.Row="1" x:Name="tag" Margin="10,0,0,0"  VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="14"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth322" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L304,0.5 L321.5,24 L304,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DoubleBtnVerticalWidth192" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L174,0.5 L191.5,24 L174,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="{TemplateBinding FontSize}"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth232" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L214.5,0.5 L231.5,24 L214.5,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth242" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L224.5,0.5 L241.5,24 L224.5,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth214" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L195.5,0.5 L213.5,24 L195.5,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth164" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L145,0.5 L163.5,24 L145,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style x:Key="DoubleBtnVerticalWidth152" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L134,0.5 L151.5,24 L134,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   Foreground="#FFFFFF" FontSize="{TemplateBinding FontSize}"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="14"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleBtnVerticalWidth104" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"  Data="M0.5,24 L18,0.5 L86,0.5 L103.5,24 L86,47.5 L18,47.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="16"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="RectPath" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnVerticalWidth164" TargetType="Button">
        <Setter Property="BorderBrush" Value="#195c7e"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="RadioFrid">
                        <Path x:Name="Rect"  Stroke="{TemplateBinding BorderBrush}" Data="M0.5,14 L10,0.5 L154,0.5 L163.5,14 L154,27.5 L10,27.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" />
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center" Foreground="White"  Background="{x:Null}"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="Rect" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="Rect" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="RadioFrid" Value="0.3"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnVerticalWidth64" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="RadioFrid">
                        <Path x:Name="Rect"  Stroke="{TemplateBinding BorderBrush}" Data="M0.5,14 L10,0.5 L54,0.5 L63.5,14 L54,27.5 L10,27.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" />
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center" Foreground="White"  Background="{x:Null}"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="Rect" Property="Fill" Value="#5ba0c5" />
                            <Setter TargetName="Rect" Property="Stroke" Value="#5ba0c5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="RadioFrid" Value="0.3"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SixSideRectBtn" TargetType="Button">
        <Setter Property="BorderBrush" Value="#23cefd"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="buttonName">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Path x:Name="RectPath"  Stroke="{TemplateBinding BorderBrush}"   Data="M0.5,24 L18,0.5 L174,0.5 L191.5,24 L174,47.5 L18,47.5  z"   HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Grid.RowSpan="2"/>
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="14"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="buttonName" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="RectPath" Property="Fill" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnSixRect44Style" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#ffffff"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Rect"  Stroke="#1eb0fc" Fill="{TemplateBinding Background}"  Data="M0.5,14 L10,0.5 L34,0.5 L43.5,14 L34,27.5 L10,27.5  z"  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" />
                        <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center" Foreground="{TemplateBinding Foreground}"  Background="{x:Null}"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="Rect" Property="Fill" Value="#5ba0c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SetBtnMouseOverWidth236" TargetType="Button">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton236.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="{TemplateBinding FontSize}"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton236_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetBtnMouseOverWidth76" TargetType="Button">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton76.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton76_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetBtnMouseOverWidth116" TargetType="Button">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton116.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="{TemplateBinding FontSize}"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton116_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetDoubleBtnMouseOverWidth116" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0"  BorderBrush="#33CCFF"  CornerRadius="5" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton116.png"/>
                        </Border.Background>
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock  x:Name="content"   VerticalAlignment="Center" Foreground="#33CCFF" FontSize="12"
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                            <TextBlock Grid.Row="1" x:Name="tag"   VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                        Text="{TemplateBinding Tag}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton116_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetBtnMouseOverWidth176" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton176.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton176_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetBtnMouseOverWidth100" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton100.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/SetButton100_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AxisYUpMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"  BorderThickness="0" >
                            <Border.Background>
                                <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/MoveButton.png"/>
                            </Border.Background>
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="14" Grid.Row="1"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,-40,0,0"/>
                        </Border>
                        <Image Width="12" Height="12" x:Name="MoveImage" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,0" Source="/WpfStyleApi;component/Resources/Cal/Style/X_Normal.png" >
                        </Image>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="MoveImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/X_Mouse.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisYDownMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"  BorderThickness="0" Grid.RowSpan="2" RenderTransformOrigin="0.5,0.5" >
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Background  >
                                <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/MoveButton.png">
                                </ImageBrush>
                            </Border.Background>
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="14" Grid.Row="1"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,10,0,0">
                                <Label.RenderTransform>
                                    <ScaleTransform ScaleY="-1" ></ScaleTransform>
                                </Label.RenderTransform>
                            </Label>
                        </Border>
                        <Image Grid.Row="0" x:Name="MoveImage"  Margin="31,16.5" Source="/WpfStyleApi;component/Resources/Cal/Style/X_Normal.png" RenderTransformOrigin="0.5,0.5" Width="12" Height="12">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>

                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="MoveImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/X_Mouse.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisXUpMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"  BorderThickness="0" RenderTransformOrigin="0.5,0.5" >
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Background>
                                <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/MoveButton.png"/>
                            </Border.Background>
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="14" Grid.Row="1" IsEnabled="True"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,-40,3,0" RenderTransformOrigin="0.5,0.5">
                                <Label.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Label.RenderTransform>
                            </Label>
                        </Border>
                        <Image Width="12" Height="12" x:Name="MoveImage" RenderTransformOrigin="0.5,0.5" Source="/WpfStyleApi;component/Resources/Cal/Style/X_Normal.png" >
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="MoveImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/X_Mouse.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisXDownMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"  BorderThickness="0" Grid.RowSpan="2" RenderTransformOrigin="0.5,0.5" >
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="270"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Background  >
                                <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/MoveButton.png">
                                </ImageBrush>
                            </Border.Background>
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="14" Grid.Row="1"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="5,-40,0,0" RenderTransformOrigin="0.5,0.5">
                                <Label.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Label.RenderTransform>

                            </Label>
                        </Border>
                        <Image Grid.Row="0" x:Name="MoveImage" Source="/WpfStyleApi;component/Resources/Cal/Style/X_Normal.png" RenderTransformOrigin="0.5,0.5"  Width="12" Height="12">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="270"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="MoveImage" Property="Source" Value="/WpfStyleApi;component/Resources/Cal/Style/X_Mouse.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZAxisMoveUpStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/ZUp.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/ZUp_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZAxisMoveDownStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/ZDown.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/ZDown_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisUCWMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/UCW.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/UCW_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisUCCWMoveStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/UCCW.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="12"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Cal/Style/UCCW_Mouse.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonSixRect62Style" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="LedImage" Source="/WpfStyleApi;component/Resources/SixRect62.png"></Image>
                        <Label x:Name="ChxContent"  VerticalAlignment="Center" Foreground="White" Grid.Column="1" Margin="0,0,0,0"
                                             Content="{TemplateBinding Content}" HorizontalAlignment="Center" ></Label>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LedImage" Property="Source"  Value="/WpfStyleApi;component/Resources/SixRect62_Mouse.png"/>
                            <Setter TargetName="ChxContent" Property="Foreground" Value="#141f3b" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AxisSafeDefBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}"  CornerRadius="5" Background="{TemplateBinding Background}">
                        <Grid >
                            <TextBlock  x:Name="content"   VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" HorizontalAlignment="Center" Block.TextAlignment="Center"></TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--//当控件获取焦点时要执行的内容-->
                        <Trigger Property="IsKeyboardFocused"  Value="true"></Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#1f305a" />
                            <Setter TargetName="border" Property="Background" Value="#1f305a" />
                            <Setter TargetName="content" Property="Foreground" Value="#1a7fd5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnBrowseMouseOver" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  BorderThickness="0" >
                        <Border.Background>
                            <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Config/Recipe/Browse0.png"/>
                        </Border.Background>
                        <Grid >
                            <Label x:Name="BtnContent"  VerticalAlignment="Center" Foreground="#ffffff" FontSize="14"
                                        Content="{TemplateBinding Content}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--//当鼠标放上去时要设置的内容-->
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Setter TargetName="BtnContent" Property="Foreground" Value="#141f3b" ></Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/WpfStyleApi;component/Resources/Config/Recipe/Browse1.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>