<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfStyleApi"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="FIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="pack://application:,,,/MemsHandler;component/Resources/#iconfont"></Setter>
        <Setter Property="Foreground" Value="{Binding TextForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{Binding TextFontSize}"/>
    </Style>

    <Style x:Key="FIconSf" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="pack://application:,,,/MemsHandler;component/Resources/#iconfontNew"></Setter>
        <Setter Property="Foreground" Value="{Binding TextForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{Binding TextFontSize}"/>
    </Style>

    <!--<Style x:Key="BlueTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="DeepSkyBlue"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="CaretBrush" Value="Red"></Setter>
        --><!--光标颜色--><!--
    </Style>-->

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid >
                        <!-- 主Border -->
                        <Border Name="bd"
                                Background="{x:Null}"
                                BorderThickness="2"
                                CornerRadius="2,2,0,0"
                                Margin="0,-2,0,0" BorderBrush="#33CCFF" >
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!-- 选择后背景 -->
                            <!--<Setter TargetName="bd" Property="Background" Value="White" />-->
                            <Setter TargetName="bd" Property="CornerRadius" Value="2,30,0,0" />
                            <!-- 选择后Margin设置成0，这样它成了最高的TabItem -->
                            <Setter TargetName="bd" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- 设置鼠标指向时的颜色 -->
                            <!--<Setter TargetName="bd" Property="Background" Value="White" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BlueBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="#33CCFF"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="BlueLabel" TargetType="Label">
        <Setter Property="BorderBrush" Value="#33CCFF"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TransText" TargetType="local:WpfTextPath">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="-90">
                </RotateTransform>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransLabel" TargetType="Label">
        <Setter Property="Foreground" Value="#33CCFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="-90">
                </RotateTransform>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- =============== 提示文本样式 =============== -->
    <Style x:Key="FlowToolTip" TargetType="ToolTip">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border Background="White" CornerRadius="2" Grid.ColumnSpan="2">
                            <Border.Effect>
                                <DropShadowEffect Direction="0" BlurRadius="7" ShadowDepth="0" Color="Black" Opacity="0.09" />
                            </Border.Effect>
                        </Border>
                        <TextBlock Grid.Column="0" Margin="5" FontSize="11" Text="{TemplateBinding ContentControl.Content}"/>
                        <TextBlock Grid.Column="1" Margin="5" FontSize="11" Text="{TemplateBinding ContentControl.Tag}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
    
    